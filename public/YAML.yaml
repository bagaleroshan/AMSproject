openapi: 3.0.0
info:
  title: Attendance Management API
  description: API for managing Subject
  version: 1.0.0
servers:
  - url: http://localhost:8000
paths:
  # /students:
  #   post:
  #     summary: Create a new student
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/StudentInput"
  #     responses:
  #       "200":
  #         description: Student created successfully
  #   get:
  #     summary: Get all students
  #     responses:
  #       "200":
  #         description: List of students retrieved successfully
  # /students/{id}:
  #   get:
  #     summary: Get a specific student by ID
  #     parameters:
  #       - in: path
  #         name: id
  #         required: true
  #         description: ID of the student to retrieve
  #         schema:
  #           type: string
  #     responses:
  #       "200":
  #         description: Student retrieved successfully
  #   patch:
  #     summary: Update a specific student by ID
  #     parameters:
  #       - in: path
  #         name: id
  #         required: true
  #         description: ID of the student to update
  #         schema:
  #           type: string
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/StudentUpdateInput"
  #     responses:
  #       "200":
  #         description: Student updated successfully
  #   delete:
  #     summary: Delete a specific student by ID
  #     parameters:
  #       - in: path
  #         name: id
  #         required: true
  #         description: ID of the student to delete
  #         schema:
  #           type: string
  #     responses:
  #       "200":
  #         description: Student deleted successfully
  # /students:
  #   post:
  #     summary: Create a new student
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/StudentInput"
  #     responses:
  #       "200":
  #         description: Student created successfully
  #   get:
  #     summary: Get all students
  #     responses:
  #       "200":
  #         description: List of students retrieved successfully
  # /students/{id}:
  #   get:
  #     summary: Get a specific student by ID
  #     parameters:
  #       - in: path
  #         name: id
  #         required: true
  #         description: ID of the student to retrieve
  #         schema:
  #           type: string
  #     responses:
  #       "200":
  #         description: Student retrieved successfully
  #   patch:
  #     summary: Update a specific student by ID
  #     parameters:
  #       - in: path
  #         name: id
  #         required: true
  #         description: ID of the student to update
  #         schema:
  #           type: string
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/StudentUpdateInput"
  #     responses:
  #       "200":
  #         description: Student updated successfully
  #   delete:
  #     summary: Delete a specific student by ID
  #     parameters:
  #       - in: path
  #         name: id
  #         required: true
  #         description: ID of the student to delete
  #         schema:
  #           type: string
  #     responses:
  #       "200":
  #         description: Student deleted successfully
  /subjects:
    post:
      summary: create subject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubjectInput"
      responses:
        "200":
          description: Student created successfully
    get:
      summary: Get all subjects
      responses:
        "200":
          description: List of students retrieved successfully
  /subjects/{id}:
    get:
      summary: Get a specific student by ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the student to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Student retrieved successfully
    patch:
      summary: Update a specific student by ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the student to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentUpdateInput"
      responses:
        "200":
          description: Student updated successfully
    delete:
      summary: Delete a specific student by ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the student to delete
          schema:
            type: string
      responses:
        "200":
          description: Student deleted successfully
components:
  schemas:
    # StudentInput:
    #   type: object
    #   properties:
    #     fullName:
    #       type: string
    #       description: The name of the student
    #     email:
    #       type: string
    #       description: The email of the student
    #     course:
    #       type: string
    #       description: The course of the student
    #     phoneNumber:
    #       type: number
    #       description: the contact info of student
    # StudentUpdateInput:
    #   type: object
    #   properties:
    #     fullName:
    #       type: string
    #       description: The updated name of the student
    #     email:
    #       type: integer
    #       description: The updated age of the student
    #     course:
    #       type: string
    #       description: The updated grade of the student
    #     phoneNumber:
    #       type: number
    #       description: the contact info of student
    SubjectInput:
      type: object
      properties:
        subjectName:
          type: string
          description: The name of the student
        subjectCode:
          type: string
          description: The age of the student
        numberOfClasses:
          type: number
          description: The grade of the student
    SubjectUpdateInput:
      type: object
      properties:
        subjectName:
          type: string
          description: The name of the student
        subjectCode:
          type: string
          description: The age of the student
        numberOfClasses:
          type: number
          description: The grade of the student
